version: '3.8'

name: de2025_etl_project

x-airflow-common: &x-airflow-common
  build: /airflow
  env_file:
    - .env
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    - ./airflow/config/airflow.cfg:/opt/airflow/airflow.cfg

services:
  postgres:
    container_name: postgres_db
    build: db/postgres
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data

  mongo:
    build: db/mongo
    container_name: mongo
    restart: always
    env_file:
      - .env
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      MONGO_DB: ${MONGO_DB}
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - /db/mongo/init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  data_generator:
    build: /data_generator
    container_name: mongo_data_generator
    depends_on:
      mongo:
        condition: service_healthy
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_DB: ${MONGO_DB}
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/
    command: ["python", "generate_data.py"]

  airflow-init:
    build: /airflow
    container_name: airflow_init
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    env_file:
      - .env
    entrypoint: ["/bin/bash", "-c", "
      airflow db init &&
      airflow db upgrade &&
      airflow users create \
        --username ${AIRFLOW_ADMIN_USERNAME} \
        --firstname Admin \
        --lastname User \
        --role Admin \
        --email ${AIRFLOW_ADMIN_EMAIL} \
        --password ${AIRFLOW_ADMIN_PASSWORD} &&
      airflow connections add 'etl_mongo' \
        --conn-type 'mongo' \
        --conn-host 'mongo' \
        --conn-schema '${MONGO_DB}' \
        --conn-login '${MONGO_INITDB_ROOT_USERNAME}' \
        --conn-password '${MONGO_INITDB_ROOT_PASSWORD}' \
        --conn-port 27017 &&
      airflow connections add 'etl_postgres' \
        --conn-type 'postgres' \
        --conn-host 'postgres' \
        --conn-schema '${POSTGRES_DB}' \
        --conn-login '${POSTGRES_USER}' \
        --conn-password '${POSTGRES_PASSWORD}' \
        --conn-port 5432
      "]

  airflow-webserver:
    <<: *x-airflow-common
    container_name: airflow_webserver
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    entrypoint: ["airflow", "webserver"]

  airflow-scheduler:
    <<: *x-airflow-common
    container_name: airflow_scheduler
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    entrypoint: ["airflow", "scheduler"]

volumes:
  pg_data:
  mongo_data:


